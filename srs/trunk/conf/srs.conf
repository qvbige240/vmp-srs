# main config for srs.
# @see full.conf for detail config.

listen              1935;
max_connections     1000;
srs_log_tank        file;
srs_log_file        ./objs/srs.log;
http_api {
    enabled         on;
    listen          1985;
    crossdomain     on;
}
http_server {
    enabled         on;
    listen          8090;
    dir             ./objs/nginx/html;
}
stats {
    network         0;
    disk            sda sdb xvda xvdb;
}
vhost __defaultVhost__ {
    #最小延迟打开，默认是打开的，该选项打开的时候，mr默认关闭。
    min_latency     on;
    #Merged-Read，针对RTMP协议，为了提高性能，SRS对于上行的read使用merged-read，即SRS在读写时一次读取N毫秒的数据
    mr {
        enabled     off;
        #默认350ms，范围[300-2000]
        #latency     350;
    }
    #Merged-Write,SRS永远使用Merged-Write，即一次发送N毫秒的包给客户端。这个算法可以将RTMP下行的效率提升5倍左右,范围[350-1800]
    mw_latency      100;
    tcp_nodelay     on;
    #enabled         on;
    #https://github.com/simple-rtmp-server/srs/wiki/v2_CN_LowLatency#gop-cache
    gop_cache       off;
    #配置直播队列的长度，服务器会将数据放在直播队列中，如果超过这个长度就清空到最后一个I帧
    #https://github.com/simple-rtmp-server/srs/wiki/v2_CN_LowLatency#%E7%B4%AF%E7%A7%AF%E5%BB%B6%E8%BF%9F
    queue_length    10;
    
    #http_flv配置
    http_remux {
        enabled     on;
        mount       [vhost]/[app]/[stream].flv;
        hstrs       on;
    }
    
    hls {
        enabled         off;
        hls_fragment    5;
        hls_window      30;
        hls_path        ./objs/nginx/html;
        hls_m3u8_file   [app]/[stream].m3u8;
        hls_ts_file     [app]/[stream]-[seq].ts;
    }
    
    dvr {
        enabled false;
        dvr_path ./objs/nginx/html/[app]/[stream].flv;
        dvr_plan session;
        dvr_duration 30;
        dvr_wait_keyframe on;
        time_jitter full;
    }
    http_hooks {
        enabled         false;
        #on_connect      http://127.0.0.1:8085/api/v1/clients; 
        #on_close        http://127.0.0.1:8085/api/v1/clients; 
        #on_publish      http://127.0.0.1:8085/api/v1/streams;
        #on_unpublish    http://127.0.0.1:8085/api/v1/streams;
        #on_play         http://127.0.0.1:8085/api/v1/sessions;
        #on_stop         http://127.0.0.1:8085/api/v1/sessions;
        #on_hls          http://127.0.0.1:8085/api/v1/hls;
        #on_hls_notify   http://127.0.0.1:8085/api/v1/hls/[app]/[stream][ts_url];
        on_vmp_publish   http://127.0.0.1:8085/api/v1/streams;
        on_vmp_unpublish http://127.0.0.1:8085/api/v1/streams;
        on_vmp_play      http://127.0.0.1:8085/api/v1/sessions;
        on_vmp_stop      http://127.0.0.1:8085/api/v1/sessions;

    }
}
